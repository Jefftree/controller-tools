// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package cronjob

import (
	"k8s.io/api/batch/v1beta1"
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// AssociativeTypeApplyConfiguration represents a declarative configuration of the AssociativeType type for use
// with apply.
type AssociativeTypeApplyConfiguration struct {
	Name      *string `json:"name,omitempty"`
	Secondary *int    `json:"secondary,omitempty"`
	Foo       *string `json:"foo,omitempty"`
}

// AssociativeTypeApplyConfiguration represents a declarative configuration of the AssociativeType type for use
// with apply.
func AssociativeType() *AssociativeTypeApplyConfiguration {
	return &AssociativeTypeApplyConfiguration{}
}

// AssociativeTypeList represents a listAlias of AssociativeTypeApplyConfiguration.
type AssociativeTypeList []*AssociativeTypeApplyConfiguration

// AssociativeTypeMap represents a map of AssociativeTypeApplyConfiguration.
type AssociativeTypeMap map[string]AssociativeTypeApplyConfiguration

// CronJobApplyConfiguration represents a declarative configuration of the CronJob type for use
// with apply.
type CronJobApplyConfiguration struct {
	metav1.TypeMeta    `json:",inline"`
	*metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec               *CronJobSpecApplyConfiguration   `json:"spec,omitempty"`
	Status             *CronJobStatusApplyConfiguration `json:"status,omitempty"`
}

// CronJobApplyConfiguration represents a declarative configuration of the CronJob type for use
// with apply.
func CronJob() *CronJobApplyConfiguration {
	return &CronJobApplyConfiguration{}
}

// CronJobList represents a listAlias of CronJobApplyConfiguration.
type CronJobList []*CronJobApplyConfiguration

// CronJobMap represents a map of CronJobApplyConfiguration.
type CronJobMap map[string]CronJobApplyConfiguration

// CronJobListApplyConfiguration represents a declarative configuration of the CronJobList type for use
// with apply.
type CronJobListApplyConfiguration struct {
	metav1.TypeMeta  `json:",inline"`
	*metav1.ListMeta `json:"metadata,omitempty"`
	Items            *[]CronJobApplyConfiguration `json:"items,omitempty"`
}

// CronJobListApplyConfiguration represents a declarative configuration of the CronJobList type for use
// with apply.
func CronJobList() *CronJobListApplyConfiguration {
	return &CronJobListApplyConfiguration{}
}

// CronJobListList represents a listAlias of CronJobListApplyConfiguration.
type CronJobListList []*CronJobListApplyConfiguration

// CronJobListMap represents a map of CronJobListApplyConfiguration.
type CronJobListMap map[string]CronJobListApplyConfiguration

// CronJobSpecApplyConfiguration represents a declarative configuration of the CronJobSpec type for use
// with apply.
type CronJobSpecApplyConfiguration struct {
	Schedule                   *string                              `json:"schedule,omitempty"`
	StartingDeadlineSeconds    **int64                              `json:"startingDeadlineSeconds,omitempty"`
	ConcurrencyPolicy          *ConcurrencyPolicy                   `json:"concurrencyPolicy,omitempty"`
	Suspend                    **bool                               `json:"suspend,omitempty"`
	NoReallySuspend            **TotallyABool                       `json:"noReallySuspend,omitempty"`
	BinaryName                 *[]byte                              `json:"binaryName,omitempty"`
	CanBeNull                  *string                              `json:"canBeNull,omitempty"`
	JobTemplate                *v1beta1.JobTemplateSpec             `json:"jobTemplate,omitempty"`
	SuccessfulJobsHistoryLimit **int32                              `json:"successfulJobsHistoryLimit,omitempty"`
	FailedJobsHistoryLimit     **int32                              `json:"failedJobsHistoryLimit,omitempty"`
	ByteSliceData              *map[string][]byte                   `json:"byteSliceData,omitempty"`
	StringSliceData            *map[string][]string                 `json:"stringSliceData,omitempty"`
	PtrData                    *map[string]*string                  `json:"ptrData,omitempty"`
	TwoOfAKindPart0            *string                              `json:"twoOfAKindPart0,omitempty"`
	TwoOfAKindPart1            *LongerString                        `json:"twoOfAKindPart1,omitempty"`
	DefaultedString            *string                              `json:"defaultedString,omitempty"`
	DefaultedSlice             *[]string                            `json:"defaultedSlice,omitempty"`
	DefaultedObject            *[]RootObjectApplyConfiguration      `json:"defaultedObject,omitempty"`
	PatternObject              *string                              `json:"patternObject,omitempty"`
	EmbeddedResource           *runtime.RawExtension                `json:"embeddedResource,omitempty"`
	UnprunedJSON               *NestedObjectApplyConfiguration      `json:"unprunedJSON,omitempty"`
	UnprunedEmbeddedResource   *runtime.RawExtension                `json:"unprunedEmbeddedResource,omitempty"`
	UnprunedFromType           *PreservedApplyConfiguration         `json:"unprunedFomType,omitempty"`
	AssociativeList            *[]AssociativeTypeApplyConfiguration `json:"associativeList,omitempty"`
	MapOfInfo                  *map[string][]byte                   `json:"mapOfInfo,omitempty"`
	StructWithSeveralFields    *NestedObjectApplyConfiguration      `json:"structWithSeveralFields,omitempty"`
	JustNestedObject           **JustNestedObjectApplyConfiguration `json:"justNestedObject,omitempty"`
	MinMaxProperties           *MinMaxObjectApplyConfiguration      `json:"minMaxProperties,omitempty"`
}

// CronJobSpecApplyConfiguration represents a declarative configuration of the CronJobSpec type for use
// with apply.
func CronJobSpec() *CronJobSpecApplyConfiguration {
	return &CronJobSpecApplyConfiguration{}
}

// CronJobSpecList represents a listAlias of CronJobSpecApplyConfiguration.
type CronJobSpecList []*CronJobSpecApplyConfiguration

// CronJobSpecMap represents a map of CronJobSpecApplyConfiguration.
type CronJobSpecMap map[string]CronJobSpecApplyConfiguration

// CronJobStatusApplyConfiguration represents a declarative configuration of the CronJobStatus type for use
// with apply.
type CronJobStatusApplyConfiguration struct {
	Active                *[]v1.ObjectReference `json:"active,omitempty"`
	LastScheduleTime      **metav1.Time         `json:"lastScheduleTime,omitempty"`
	LastScheduleMicroTime **metav1.MicroTime    `json:"lastScheduleMicroTime,omitempty"`
}

// CronJobStatusApplyConfiguration represents a declarative configuration of the CronJobStatus type for use
// with apply.
func CronJobStatus() *CronJobStatusApplyConfiguration {
	return &CronJobStatusApplyConfiguration{}
}

// CronJobStatusList represents a listAlias of CronJobStatusApplyConfiguration.
type CronJobStatusList []*CronJobStatusApplyConfiguration

// CronJobStatusMap represents a map of CronJobStatusApplyConfiguration.
type CronJobStatusMap map[string]CronJobStatusApplyConfiguration

// JustNestedObjectApplyConfiguration represents a declarative configuration of the JustNestedObject type for use
// with apply.
type JustNestedObjectApplyConfiguration struct {
}

// JustNestedObjectApplyConfiguration represents a declarative configuration of the JustNestedObject type for use
// with apply.
func JustNestedObject() *JustNestedObjectApplyConfiguration {
	return &JustNestedObjectApplyConfiguration{}
}

// JustNestedObjectList represents a listAlias of JustNestedObjectApplyConfiguration.
type JustNestedObjectList []*JustNestedObjectApplyConfiguration

// JustNestedObjectMap represents a map of JustNestedObjectApplyConfiguration.
type JustNestedObjectMap map[string]JustNestedObjectApplyConfiguration

// MinMaxObjectApplyConfiguration represents a declarative configuration of the MinMaxObject type for use
// with apply.
type MinMaxObjectApplyConfiguration struct {
	Foo *string `json:"foo,omitempty"`
	Bar *string `json:"bar,omitempty"`
	Baz *string `json:"baz,omitempty"`
}

// MinMaxObjectApplyConfiguration represents a declarative configuration of the MinMaxObject type for use
// with apply.
func MinMaxObject() *MinMaxObjectApplyConfiguration {
	return &MinMaxObjectApplyConfiguration{}
}

// MinMaxObjectList represents a listAlias of MinMaxObjectApplyConfiguration.
type MinMaxObjectList []*MinMaxObjectApplyConfiguration

// MinMaxObjectMap represents a map of MinMaxObjectApplyConfiguration.
type MinMaxObjectMap map[string]MinMaxObjectApplyConfiguration

// NestedObjectApplyConfiguration represents a declarative configuration of the NestedObject type for use
// with apply.
type NestedObjectApplyConfiguration struct {
	Foo *string `json:"foo,omitempty"`
	Bar *bool   `json:"bar,omitempty"`
}

// NestedObjectApplyConfiguration represents a declarative configuration of the NestedObject type for use
// with apply.
func NestedObject() *NestedObjectApplyConfiguration {
	return &NestedObjectApplyConfiguration{}
}

// NestedObjectList represents a listAlias of NestedObjectApplyConfiguration.
type NestedObjectList []*NestedObjectApplyConfiguration

// NestedObjectMap represents a map of NestedObjectApplyConfiguration.
type NestedObjectMap map[string]NestedObjectApplyConfiguration

// PreservedApplyConfiguration represents a declarative configuration of the Preserved type for use
// with apply.
type PreservedApplyConfiguration struct {
	ConcreteField *string `json:"concreteField,omitempty"`
}

// PreservedApplyConfiguration represents a declarative configuration of the Preserved type for use
// with apply.
func Preserved() *PreservedApplyConfiguration {
	return &PreservedApplyConfiguration{}
}

// PreservedList represents a listAlias of PreservedApplyConfiguration.
type PreservedList []*PreservedApplyConfiguration

// PreservedMap represents a map of PreservedApplyConfiguration.
type PreservedMap map[string]PreservedApplyConfiguration

// RootObjectApplyConfiguration represents a declarative configuration of the RootObject type for use
// with apply.
type RootObjectApplyConfiguration struct {
	Nested *NestedObjectApplyConfiguration `json:"nested,omitempty"`
}

// RootObjectApplyConfiguration represents a declarative configuration of the RootObject type for use
// with apply.
func RootObject() *RootObjectApplyConfiguration {
	return &RootObjectApplyConfiguration{}
}

// RootObjectList represents a listAlias of RootObjectApplyConfiguration.
type RootObjectList []*RootObjectApplyConfiguration

// RootObjectMap represents a map of RootObjectApplyConfiguration.
type RootObjectMap map[string]RootObjectApplyConfiguration
