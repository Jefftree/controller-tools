// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package cronjob

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	testdata "sigs.k8s.io/controller-tools/pkg/applyconfigurations/testdata"
	v1beta1 "sigs.k8s.io/controller-tools/pkg/applyconfigurations/testdata/ac/batch/v1beta1"
	v1 "sigs.k8s.io/controller-tools/pkg/applyconfigurations/testdata/ac/core/v1"
	acmetav1 "sigs.k8s.io/controller-tools/pkg/applyconfigurations/testdata/ac/meta/v1"
)

// AssociativeTypeApplyConfiguration represents a declarative configuration of the AssociativeType type for use
// with apply.
type AssociativeTypeApplyConfiguration struct {
	Name      *string `json:"name,omitempty"`
	Secondary *int    `json:"secondary,omitempty"`
	Foo       *string `json:"foo,omitempty"`
}

// AssociativeTypeApplyConfiguration represents a declarative configuration of the AssociativeType type for use
// with apply.
func AssociativeType() *AssociativeTypeApplyConfiguration {
	return &AssociativeTypeApplyConfiguration{}
}

// CronJobApplyConfiguration represents a declarative configuration of the CronJob type for use
// with apply.
type CronJobApplyConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              *CronJobSpecApplyConfiguration   `json:"spec,omitempty"`
	Status            *CronJobStatusApplyConfiguration `json:"status,omitempty"`
}

// CronJobApplyConfiguration represents a declarative configuration of the CronJob type for use
// with apply.
func CronJob() *CronJobApplyConfiguration {
	return &CronJobApplyConfiguration{}
}
func (ac *CronJobApplyConfiguration) GetReferenceType() runtime.Object {
	return testdata.CronJob{}
}
func (ac *CronJobApplyConfiguration) DeepCopy() *CronJobApplyConfiguration {
	return ac
}

// CronJobListApplyConfiguration represents a declarative configuration of the CronJobList type for use
// with apply.
type CronJobListApplyConfiguration struct {
	metav1.TypeMeta                     `json:",inline"`
	acmetav1.ListMetaApplyConfiguration `json:"metadata,omitempty"`
	Items                               *[]CronJobApplyConfiguration `json:"items,omitempty"`
}

// CronJobListApplyConfiguration represents a declarative configuration of the CronJobList type for use
// with apply.
func CronJobList() *CronJobListApplyConfiguration {
	return &CronJobListApplyConfiguration{}
}
func (ac *CronJobListApplyConfiguration) GetReferenceType() runtime.Object {
	return testdata.CronJobList{}
}
func (ac *CronJobListApplyConfiguration) DeepCopy() *CronJobListApplyConfiguration {
	return ac
}

// CronJobSpecApplyConfiguration represents a declarative configuration of the CronJobSpec type for use
// with apply.
type CronJobSpecApplyConfiguration struct {
	Schedule                   *string                                    `json:"schedule,omitempty"`
	StartingDeadlineSeconds    *int64                                     `json:"startingDeadlineSeconds,omitempty"`
	ConcurrencyPolicy          *testdata.ConcurrencyPolicy                `json:"concurrencyPolicy,omitempty"`
	Suspend                    *bool                                      `json:"suspend,omitempty"`
	NoReallySuspend            *testdata.TotallyABool                     `json:"noReallySuspend,omitempty"`
	BinaryName                 *[]byte                                    `json:"binaryName,omitempty"`
	CanBeNull                  *string                                    `json:"canBeNull,omitempty"`
	JobTemplate                *v1beta1.JobTemplateSpecApplyConfiguration `json:"jobTemplate,omitempty"`
	SuccessfulJobsHistoryLimit *int32                                     `json:"successfulJobsHistoryLimit,omitempty"`
	FailedJobsHistoryLimit     *int32                                     `json:"failedJobsHistoryLimit,omitempty"`
	ByteSliceData              *map[string][]byte                         `json:"byteSliceData,omitempty"`
	StringSliceData            *map[string][]string                       `json:"stringSliceData,omitempty"`
	PtrData                    *map[string]*string                        `json:"ptrData,omitempty"`
	TwoOfAKindPart0            *string                                    `json:"twoOfAKindPart0,omitempty"`
	TwoOfAKindPart1            *testdata.LongerString                     `json:"twoOfAKindPart1,omitempty"`
	DefaultedString            *string                                    `json:"defaultedString,omitempty"`
	DefaultedSlice             *[]string                                  `json:"defaultedSlice,omitempty"`
	DefaultedObject            *[]RootObjectApplyConfiguration            `json:"defaultedObject,omitempty"`
	PatternObject              *string                                    `json:"patternObject,omitempty"`
	EmbeddedResource           *runtime.RawExtension                      `json:"embeddedResource,omitempty"`
	UnprunedJSON               *NestedObjectApplyConfiguration            `json:"unprunedJSON,omitempty"`
	UnprunedEmbeddedResource   *runtime.RawExtension                      `json:"unprunedEmbeddedResource,omitempty"`
	AssociativeList            *[]AssociativeTypeApplyConfiguration       `json:"associativeList,omitempty"`
	MapOfInfo                  *map[string][]byte                         `json:"mapOfInfo,omitempty"`
	StructWithSeveralFields    *NestedObjectApplyConfiguration            `json:"structWithSeveralFields,omitempty"`
	JustNestedObject           *testdata.JustNestedObject                 `json:"justNestedObject,omitempty"`
	MinMaxProperties           *MinMaxObjectApplyConfiguration            `json:"minMaxProperties,omitempty"`
}

// CronJobSpecApplyConfiguration represents a declarative configuration of the CronJobSpec type for use
// with apply.
func CronJobSpec() *CronJobSpecApplyConfiguration {
	return &CronJobSpecApplyConfiguration{}
}

// CronJobStatusApplyConfiguration represents a declarative configuration of the CronJobStatus type for use
// with apply.
type CronJobStatusApplyConfiguration struct {
	Active                *[]v1.ObjectReferenceApplyConfiguration `json:"active,omitempty"`
	LastScheduleTime      *metav1.Time                            `json:"lastScheduleTime,omitempty"`
	LastScheduleMicroTime *metav1.MicroTime                       `json:"lastScheduleMicroTime,omitempty"`
}

// CronJobStatusApplyConfiguration represents a declarative configuration of the CronJobStatus type for use
// with apply.
func CronJobStatus() *CronJobStatusApplyConfiguration {
	return &CronJobStatusApplyConfiguration{}
}

// MinMaxObjectApplyConfiguration represents a declarative configuration of the MinMaxObject type for use
// with apply.
type MinMaxObjectApplyConfiguration struct {
	Foo *string `json:"foo,omitempty"`
	Bar *string `json:"bar,omitempty"`
	Baz *string `json:"baz,omitempty"`
}

// MinMaxObjectApplyConfiguration represents a declarative configuration of the MinMaxObject type for use
// with apply.
func MinMaxObject() *MinMaxObjectApplyConfiguration {
	return &MinMaxObjectApplyConfiguration{}
}

// NestedObjectApplyConfiguration represents a declarative configuration of the NestedObject type for use
// with apply.
type NestedObjectApplyConfiguration struct {
	Foo *string `json:"foo,omitempty"`
	Bar *bool   `json:"bar,omitempty"`
}

// NestedObjectApplyConfiguration represents a declarative configuration of the NestedObject type for use
// with apply.
func NestedObject() *NestedObjectApplyConfiguration {
	return &NestedObjectApplyConfiguration{}
}

// RootObjectApplyConfiguration represents a declarative configuration of the RootObject type for use
// with apply.
type RootObjectApplyConfiguration struct {
	Nested *NestedObjectApplyConfiguration `json:"nested,omitempty"`
}

// RootObjectApplyConfiguration represents a declarative configuration of the RootObject type for use
// with apply.
func RootObject() *RootObjectApplyConfiguration {
	return &RootObjectApplyConfiguration{}
}
